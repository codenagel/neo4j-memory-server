[tool.poetry]
name = "neo4j-memory-server"
version = "0.1.0"
description = "A Model Context Protocol (MCP) server that provides persistent memory for AI agents using Neo4j graph database"
authors = ["codenagel <your-email@example.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/yourusername/neo4j-memory-server"
repository = "https://github.com/yourusername/neo4j-memory-server"
keywords = ["mcp", "neo4j", "ai", "memory", "graph-database", "claude"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database :: Database Engines/Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]

[tool.poetry.dependencies]
python = "^3.12"
neo4j = "^5.28.1"
mcp = "^1.9.3"
mypy = "^1.16.0"
ruff = "^0.11.13"

[tool.mypy]
python_version = "3.12"
mypy_path = "src"
packages = ["neo4j_memory_server"]
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"